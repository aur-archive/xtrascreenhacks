--- hacks/glx/psychedelic.c.orig	2011-03-26 21:21:59.000000000 -0400
+++ hacks/glx/psychedelic.c	2011-05-04 16:08:17.670000454 -0400
@@ -24,6 +24,7 @@
 
 #include "xlockmore.h"
 #include "clovermap.h"
+#include "plasmamap.h"
 #include <math.h>
 
 #define DEFAULTS        "*delay:	30000           \n" \
@@ -37,10 +38,10 @@
 /* #define DEF_STEP        "200" */
 #define DEF_SMOOTH "False"
 #define DEF_CLOVER "False"
-#define DEF_SIMPLE "False"
-#define DEF_SIMPLE2 "False"
+#define DEF_PLASMA "False"
+#define DEF_SINES "False"
 
-enum displaymap {CLOVER, SIMPLE, SIMPLE2};
+enum displaymap {CLOVER, PLASMA, SINES};
 /* #define NUMMAPS 3 */
 
 typedef struct {
@@ -61,8 +62,8 @@
 /* static int step; */
 static Bool smooth;
 static Bool clover;
-static Bool simple;
-static Bool simple2;
+static Bool plasma;
+static Bool sines;
 
 static XrmOptionDescRec opts[] = {
     { "-map",   ".map",   XrmoptionSepArg, 0 },
@@ -73,10 +74,10 @@
     {"+smooth",      ".smooth",     XrmoptionNoArg, "False" },
     {"-clover",      ".clover",     XrmoptionNoArg, "True" },
     {"+clover",      ".clover",     XrmoptionNoArg, "False" },
-    {"-simple",      ".simple",     XrmoptionNoArg, "True" },
-    {"+simple",      ".simple",     XrmoptionNoArg, "False" },
-    {"-simple2",      ".simple2",     XrmoptionNoArg, "True" },
-    {"+simple2",      ".simple2",     XrmoptionNoArg, "False" },
+    {"-plasma",      ".plasma",     XrmoptionNoArg, "True" },
+    {"+plasma",      ".plasma",     XrmoptionNoArg, "False" },
+    {"-sines",      ".sines",     XrmoptionNoArg, "True" },
+    {"+sines",      ".sines",     XrmoptionNoArg, "False" },
 };
 
 static argtype vars[] = {
@@ -86,8 +87,8 @@
 /*     {&step,     "step",      "Step",       DEF_STEP,      t_Int}, */
     {&smooth,     "smooth",      "Smooth",       DEF_SMOOTH,      t_Bool},
     {&clover,     "clover",      "Clover",       DEF_CLOVER,      t_Bool},
-    {&simple,     "simple",      "Simple",       DEF_SIMPLE,      t_Bool},
-    {&simple2,     "simple2",      "Simple2",       DEF_SIMPLE2,      t_Bool},
+    {&plasma,     "plasma",      "Plasma",       DEF_PLASMA,      t_Bool},
+    {&sines,     "sines",      "Sines",       DEF_SINES,      t_Bool},
 };
 
 static OptionStruct desc[] = {
@@ -97,8 +98,8 @@
 /*     {"-step",  "how far the flyers should move forward in one frame"}, */
     {"-smooth", "whether to use smooth color transitions"},
     {"-clover", "whether to use the clover (default) colormap--overrides other maps"},
-  {"-simple", "whether to use the simple colormap"},
-  {"-simple2", "whether to use the other simple colormap"},
+  {"-plasma", "whether to use the plasma colormap"},
+  {"-sines", "whether to use the other simple colormap"},
 };
 
 ENTRYPOINT ModeSpecOpt psychedelic_opts = {countof(opts), opts, countof(vars), vars, desc};
@@ -124,33 +125,51 @@
       }
 }
 
-/* === some simple maps for testing */
-static void
-simpleImage(int * bits, int width, int height, int numcolors)
+/* === some simple maps that are too small to merit their own file */
+static void sineImage(int * bits, int width, int height, int numcolors)
 {
-        int     i, j;
-
-        for (i = 0; i < height; i++) {
-          for (j = 0; j< width / 2; j++) {
-            bits[ i * width + j ] = bits[i * width + width - j] = j % numcolors;
-          }
-        }
+  float  sinemap;
+  float xexpand, yexpand;
+  int itor, jtor;
+  xexpand = yexpand = 0.0;
+  while (xexpand == 0.0)   xexpand = (float)(random() % 100) / 1000.;
+  while (yexpand == 0.0)   yexpand = (float)(random() % 100) / 1000.;
+  for (itor = 0; itor < height; itor++)
+    {
+      for (jtor = 0; jtor < width; jtor++)
+	{
+	  /* factors between 0.1 and 0.01, assign both separately */
+	  sinemap = 0.25 * (sin(yexpand * itor) + sin(xexpand * jtor)) + 0.5;
+	  bits[itor * width + jtor] =  sinemap  * (numcolors - 1);
+	}
+    }
 }
 
-static void
-simple2Image(int * bits, int width, int height, int numcolors)
-{
-        int     i, j;
-
-        for (i = 0; i < height/2; i++) {
-          for (j = 0; j< width; j++) {
-/*             bits[ i * width + j ] =(i > height/2 ? numcolors -(i % numcolors) - 1 : i % numcolors);; */
-            bits[ i * width + j ] = bits[(height - i) * width + j] = i % numcolors;
-
-
-          }
-        }
-}
+/* static void */
+/* simpleImage(int * bits, int width, int height, int numcolors) */
+/* { */
+/*         int     i, j; */
+
+/*         for (i = 0; i < height; i++) { */
+/*           for (j = 0; j< width / 2; j++) { */
+/*             bits[ i * width + j ] = bits[i * width + width - j] = j % numcolors; */
+/*           } */
+/*         } */
+/* } */
+
+/* static void */
+/* sinesImage(int * bits, int width, int height, int numcolors) */
+/* { */
+/*         int     i, j; */
+
+/*         for (i = 0; i < height/2; i++) { */
+/*           for (j = 0; j< width; j++) { */
+/*             bits[ i * width + j ] = bits[(height - i) * width + j] = i % numcolors; */
+
+
+/*           } */
+/*         } */
+/* } */
 /* ===== end maps ============== */
 
 ENTRYPOINT void reshape_psychedelic (ModeInfo *mi, int width, int height)
@@ -209,12 +228,14 @@
     make_smooth_colormap (MI_DISPLAY(mi),MI_VISUAL(mi), MI_COLORMAP(mi),
                             lp->colors, &lp->numcolors, True, False, 0);
     else
+      {
     make_random_colormap (MI_DISPLAY(mi),MI_VISUAL(mi), MI_COLORMAP(mi),
                             lp->colors, &lp->numcolors, True, False, 0, True);
       
    /* add bg color to last slot, overwriting the assigned color */
       lp->colors[lp->numcolors-1].pixel = MI_BLACK_PIXEL(mi);
       XQueryColor(MI_DISPLAY(mi), MI_COLORMAP(mi), &lp->colors[lp->numcolors - 1]);
+      }
    }
     lp->pixcolors = calloc(lp->numcolors, sizeof(GLuint));
     if (lp->pixcolors == NULL)
@@ -247,19 +268,19 @@
 	  }
        memset(lp->pixgrid, 0, lp->gridheight * lp->gridwidth * sizeof(int));
        dmap = CLOVER;
-       if (simple) dmap = SIMPLE;
-       if (simple2) dmap = SIMPLE2;
+       if (plasma) dmap = PLASMA;
+       if (sines) dmap = SINES;
        if (clover) dmap = CLOVER;
        switch(dmap)
 	 {
 	 case CLOVER:
       cloverImage(lp->pixgrid, lp->numcolors, lp->gridwidth, lp->gridheight, R);
       break;
-	 case SIMPLE:
-	   simpleImage(lp->pixgrid, lp->gridwidth, lp->gridheight, lp->numcolors );
+	 case PLASMA:
+	   plasmaImage(lp->pixgrid, lp->gridwidth, lp->gridheight, lp->numcolors );
 	   break;
-	 case SIMPLE2:
-	   simple2Image(lp->pixgrid, lp->gridwidth, lp->gridheight, lp->numcolors );
+	 case SINES:
+	   sineImage(lp->pixgrid, lp->gridwidth, lp->gridheight, lp->numcolors );
 	   break;
 	 default:
       cloverImage(lp->pixgrid, lp->numcolors, lp->gridwidth, lp->gridheight, R);
@@ -342,9 +363,12 @@
 /* deal with likely non-portability of packed pixels -- maybe MI_VISUAL(mi) will be useful */
 
 /* make more maps, handle option for them better */
+/* come up with a better name for "sines", I know I've seen this pattern before */
 /* make mono a ramp of greys, not just black and white */
+/* save moduloing each pixel by making color array twice the length of ncolors,
+ * and repeating the colors in the second half
+ */
 
-/* take black stripe out of smooth? */
 /* apparently there is a bug in clovermap that leaves
  * some indices == numcolors, not numcolors -1
  * this can cause an out of range error if not modulo'd again
--- hacks/glx/Makefile.in.orig	2011-03-27 00:24:34.000000000 -0400
+++ hacks/glx/Makefile.in	2011-05-04 15:32:45.000000000 -0400
@@ -81,14 +81,14 @@
 		   $(UTILS_SRC)/yarandom.o $(UTILS_SRC)/xshm.o $(UTILS_SRC)/erase.o
 
 SRCS		=  xlock-gl-utils.c fps.c xpm-ximage.c xbmread.c flyer.c \ 		  			berlinuhr.c bclockhousing.c bclocklamps.c soma.c \ 					bevelcube.c skylark.c crater4.c ejecta.c craters.c \
-	clovermap.c psychedelic.c
+	clovermap.c plasmamap.c psychedelic.c
 
 
 
 OBJS		= xlock-gl-utils.o fps.o xpm-ximage.o xbmread.o flyer.o \
 		   berlinuhr.o bclockhousing.o bclocklamps.o soma.o \
 		   bevelcube.o skylark.o crater4.o ejecta.o craters.o \
-		  clovermap.o psychedelic.o
+		  clovermap.o plasmamap.o psychedelic.o
 
 
 GL_EXES		=  flyer berlinuhr soma skylark craters psychedelic
@@ -109,7 +109,7 @@
 
 
 HDRS		=  xpm-ximage.h xbmread.h bclockconnector.h bclockhousing.h \ 					bclocklamps.h bclocklightbank.h bevelcube.h flipguide.h \ 					somafigures.h boomerangs.h crater4.h ejecta.h  \
-			 clovermap.h
+			 clovermap.h plasmamap.h
 
 GL_MEN		= flyer.man berlinuhr.man soma.man skylark.man craters.man \
                                    psychedelic.man
@@ -367,8 +367,8 @@
 craters: craters.o crater4.o ejecta.o $(HACK_OBJS)
 	$(CC_HACK) -o $@ $@.o crater4.o ejecta.o $(HACK_OBJS) $(XPM_LIBS)
 
-psychedelic: psychedelic.o  clovermap.o  $(HACK_OBJS)
-	$(CC_HACK) -o $@ $@.o clovermap.o  $(HACK_OBJS) $(XPM_LIBS)
+psychedelic: psychedelic.o  clovermap.o  plasmamap.o $(HACK_OBJS)
+	$(CC_HACK) -o $@ $@.o clovermap.o  plasmamap.o $(HACK_OBJS) $(XPM_LIBS)
 
 
 
@@ -443,6 +443,7 @@
 fps.o: $(HACK_SRC)/xlockmoreI.h
 psychedelic.o: $(srcdir)/clovermap.h
 psychedelic.o: ../../config.h
+psychedelic.o: $(srcdir)/plasmamap.h
 psychedelic.o: $(HACK_SRC)/screenhackI.h
 psychedelic.o: $(UTILS_SRC)/colors.h
 psychedelic.o: $(UTILS_SRC)/grabscreen.h
